name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: expenses_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    # Backend Tests
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Generate Prisma Client
      working-directory: ./backend
      run: npx prisma generate

    - name: Run database migrations
      working-directory: ./backend
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/expenses_test_db

    - name: Run backend unit tests
      working-directory: ./backend
      run: npm run test
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/expenses_test_db

    - name: Run backend e2e tests
      working-directory: ./backend
      run: npm run test:e2e
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/expenses_test_db
        SUPABASE_URL: https://test-supabase-url.supabase.co
        SUPABASE_ANON_KEY: test-anon-key
        SUPABASE_SERVICE_ROLE_KEY: test-service-role-key

    # Frontend Tests
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test -- --coverage --watchAll=false

    - name: Run frontend build test
      working-directory: ./frontend
      run: npm run build

    # Coverage Reports
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    # Backend Linting
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run backend linting
      working-directory: ./backend
      run: npm run lint

    - name: Check backend formatting
      working-directory: ./backend
      run: npm run format

    # Frontend Linting  
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run frontend linting
      working-directory: ./frontend
      run: npm run lint

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    # Audit npm packages
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Audit backend dependencies
      working-directory: ./backend
      run: npm audit --audit-level moderate

    - name: Audit frontend dependencies
      working-directory: ./frontend
      run: npm audit --audit-level moderate
